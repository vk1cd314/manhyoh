// Generated by view binder compiler. Do not edit!
package com.example.mahnyoh.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mahnyoh.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final VideoView ivVideo;

  @NonNull
  public final LinearLayout llExerciseView;

  @NonNull
  public final LinearLayout llRestView;

  @NonNull
  public final LinearLayout pause;

  @NonNull
  public final ImageView play;

  @NonNull
  public final ImageView playRest;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ProgressBar progressBarExercise;

  @NonNull
  public final LinearLayout restPause;

  @NonNull
  public final TextView tvExerciseName;

  @NonNull
  public final TextView tvExerciseTimer;

  @NonNull
  public final TextView tvTimer;

  @NonNull
  public final TextView tvUpcomingExerciseName;

  private ExDetailsBinding(@NonNull RelativeLayout rootView, @NonNull VideoView ivVideo,
      @NonNull LinearLayout llExerciseView, @NonNull LinearLayout llRestView,
      @NonNull LinearLayout pause, @NonNull ImageView play, @NonNull ImageView playRest,
      @NonNull ProgressBar progressBar, @NonNull ProgressBar progressBarExercise,
      @NonNull LinearLayout restPause, @NonNull TextView tvExerciseName,
      @NonNull TextView tvExerciseTimer, @NonNull TextView tvTimer,
      @NonNull TextView tvUpcomingExerciseName) {
    this.rootView = rootView;
    this.ivVideo = ivVideo;
    this.llExerciseView = llExerciseView;
    this.llRestView = llRestView;
    this.pause = pause;
    this.play = play;
    this.playRest = playRest;
    this.progressBar = progressBar;
    this.progressBarExercise = progressBarExercise;
    this.restPause = restPause;
    this.tvExerciseName = tvExerciseName;
    this.tvExerciseTimer = tvExerciseTimer;
    this.tvTimer = tvTimer;
    this.tvUpcomingExerciseName = tvUpcomingExerciseName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ex_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivVideo;
      VideoView ivVideo = ViewBindings.findChildViewById(rootView, id);
      if (ivVideo == null) {
        break missingId;
      }

      id = R.id.llExerciseView;
      LinearLayout llExerciseView = ViewBindings.findChildViewById(rootView, id);
      if (llExerciseView == null) {
        break missingId;
      }

      id = R.id.llRestView;
      LinearLayout llRestView = ViewBindings.findChildViewById(rootView, id);
      if (llRestView == null) {
        break missingId;
      }

      id = R.id.pause;
      LinearLayout pause = ViewBindings.findChildViewById(rootView, id);
      if (pause == null) {
        break missingId;
      }

      id = R.id.play;
      ImageView play = ViewBindings.findChildViewById(rootView, id);
      if (play == null) {
        break missingId;
      }

      id = R.id.playRest;
      ImageView playRest = ViewBindings.findChildViewById(rootView, id);
      if (playRest == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressBarExercise;
      ProgressBar progressBarExercise = ViewBindings.findChildViewById(rootView, id);
      if (progressBarExercise == null) {
        break missingId;
      }

      id = R.id.restPause;
      LinearLayout restPause = ViewBindings.findChildViewById(rootView, id);
      if (restPause == null) {
        break missingId;
      }

      id = R.id.tvExerciseName;
      TextView tvExerciseName = ViewBindings.findChildViewById(rootView, id);
      if (tvExerciseName == null) {
        break missingId;
      }

      id = R.id.tvExerciseTimer;
      TextView tvExerciseTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvExerciseTimer == null) {
        break missingId;
      }

      id = R.id.tvTimer;
      TextView tvTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvTimer == null) {
        break missingId;
      }

      id = R.id.tvUpcomingExerciseName;
      TextView tvUpcomingExerciseName = ViewBindings.findChildViewById(rootView, id);
      if (tvUpcomingExerciseName == null) {
        break missingId;
      }

      return new ExDetailsBinding((RelativeLayout) rootView, ivVideo, llExerciseView, llRestView,
          pause, play, playRest, progressBar, progressBarExercise, restPause, tvExerciseName,
          tvExerciseTimer, tvTimer, tvUpcomingExerciseName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
